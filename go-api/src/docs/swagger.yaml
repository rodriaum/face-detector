basePath: /v1
definitions:
  models.FileUploadResponse:
    properties:
      contentType:
        type: string
      fileId:
        type: string
      fileName:
        type: string
      fileSize:
        type: integer
      uploadDate:
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  description: API for face detection with image upload and management
  title: Face Detector API
  version: "1.0"
paths:
  /images/delete/{id}:
    delete:
      description: Delete a specific image by its ID
      parameters:
      - description: Image ID
        in: path
        name: id
        required: true
        type: string
      responses:
        "204":
          description: Image successfully deleted
        "404":
          description: Image not found
          schema:
            additionalProperties: true
            type: object
      summary: Delete image by ID
      tags:
      - Images
  /images/get-all:
    get:
      description: Retrieve a list of all uploaded images with base64 encoded data
      produces:
      - application/json
      responses:
        "200":
          description: A list of images
          schema:
            items:
              additionalProperties: true
              type: object
            type: array
        "404":
          description: No images found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: Get all images
      tags:
      - Images
  /images/get/{id}:
    get:
      description: Retrieve a specific image by its ID
      parameters:
      - description: Image ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - image/*
      responses:
        "200":
          description: Image file returned as binary data
        "404":
          description: Image not found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: Get image by ID
      tags:
      - Images
  /images/info/{id}:
    get:
      description: Retrieve metadata about a specific image
      parameters:
      - description: Image ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Image information retrieved successfully
          schema:
            $ref: '#/definitions/models.FileUploadResponse'
        "404":
          description: Image not found
          schema:
            additionalProperties: true
            type: object
      summary: Get image information
      tags:
      - Images
  /images/list:
    get:
      description: Retrieve a list of all uploaded images with base64 encoded data
      produces:
      - application/json
      responses:
        "200":
          description: A list of images
          schema:
            items:
              additionalProperties: true
              type: object
            type: array
        "404":
          description: No images found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: Get all images
      tags:
      - Images
  /images/metadata/{id}:
    get:
      description: Retrieve metadata about a specific image
      parameters:
      - description: Image ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Image metadata retrieved successfully
          schema:
            $ref: '#/definitions/models.FileUploadResponse'
        "404":
          description: Image not found
          schema:
            additionalProperties: true
            type: object
      summary: Get image metadata
      tags:
      - Images
  /images/upload:
    post:
      consumes:
      - multipart/form-data
      description: Upload a new image file
      parameters:
      - description: Image file (JPG, PNG, GIF, BMP, WebP)
        in: formData
        name: file
        required: true
        type: file
      - description: Name of the uploader (defaults to 'anonymous' if not provided)
        in: formData
        name: uploadedBy
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Image uploaded successfully
          schema:
            $ref: '#/definitions/models.FileUploadResponse'
        "400":
          description: Bad request (no file, invalid image format, or invalid filename)
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: Upload image
      tags:
      - Images
  /images/view/{id}:
    get:
      description: Retrieve a specific image by its ID
      parameters:
      - description: Image ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - image/*
      responses:
        "200":
          description: Image file returned as binary data
        "404":
          description: Image not found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: Get image by ID
      tags:
      - Images
  /info/ping:
    get:
      description: Simple endpoint to verify if the server is operational
      produces:
      - application/json
      responses:
        "200":
          description: Server is operational
          schema:
            additionalProperties: true
            type: object
      summary: Check server status
      tags:
      - Info
swagger: "2.0"
